openapi: 3.0.0
info:
  title: Books API
  description: This web service offers information on books
  version: 0.1.9
servers:
- url: http://webservice_booksapps.netlify.org
  description: web service published on netlify
paths:
  /books/{bookId}:
    get:
      summary: Returns a book by ID.
      parameters:
      - name: bookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    put:
      summary: Update book information
      parameters:
      - name: bookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Book data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        "200":
          description: OK
    delete:
      summary: Delete a book by ID.
      parameters:
      - name: bookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /books/:
    get:
      summary: Returns all books.
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
                x-content-type: application/json
    post:
      summary: Create a new book
      requestBody:
        description: Book data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        "200":
          description: OK
  /books/{bookId}/publisher/:
    get:
      summary: Returns all publishers from book.
      parameters:
      - name: bookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publisher'
                x-content-type: application/json
  /authors/:
    get:
      summary: Returns all authors.
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
                x-content-type: application/json
    post:
      summary: Create a new author
      requestBody:
        description: Author data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      responses:
        "200":
          description: OK
  /authors/{authorId}:
    get:
      summary: Returns an author by ID.
      parameters:
      - name: authorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
    put:
      summary: Update author information
      parameters:
      - name: authorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Book data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      responses:
        "200":
          description: OK
    delete:
      summary: Delete a author by ID.
      parameters:
      - name: authorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /authors/{authorId}/books/:
    get:
      summary: Returns all books from author.
      parameters:
      - name: authorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
                x-content-type: application/json
components:
  schemas:
    Book:
      type: object
      properties:
        bookId:
          type: string
        title:
          type: string
        edition:
          type: string
        copyright:
          type: string
        language:
          type: string
        pages:
          type: string
        publisher:
          type: array
          items:
            $ref: '#/components/schemas/Publisher'
      example:
        copyright: "2015"
        pages: "1054"
        edition: 4th
        language: ENGLISH
        title: Database System
        bookId: book01
        publisher:
        - publisherId: publisher1
          name: Santillana
          country: Colombia
          founded: "1980"
          genere: Drama
        - publisherId: publisher2
          name: Russo Brothers
          country: USA
          founded: "1990"
          genere: Accion
    Author:
      type: object
      properties:
        authorId:
          type: string
        name:
          type: string
        nationality:
          type: string
        birth:
          type: string
        genere:
          type: string
        book:
          type: array
          items:
            $ref: '#/components/schemas/Book'
      example:
        authorId: author1
        name: Emiliano Saenz
        nationality: Colombian
        birth: 19/03/2009
        genere: Male
        book:
          copyright: "2015"
          pages: "1054"
          edition: 4th
          language: ENGLISH
          title: Database System
          bookId: book01
          publisher:
          - publisherId: publisher1
            name: Santillana
            country: Colombia
            founded: "1980"
            genere: Drama
          - publisherId: publisher2
            name: Russo Brothers
            country: USA
            founded: "1990"
            genere: Accion
    Publisher:
      type: object
      properties:
        publisherId:
          type: string
        name:
          type: string
        country:
          type: string
        founded:
          type: string
        genere:
          type: string
      example:
        publisherId: publisher1
        name: Santillana
        country: Colombia
        founded: "1980"
        genere: Drama
